关于我这个语言，我从2006年开始就有点想法，并且逐步的付诸实施，写了一些源码，也写了一些文档，最近正在整理原来的东西，把他作为历史，
国内跳梁小丑很多，比如易语言和Aauto（现在改名了叫aarido），我是说，这个事外行看热闹内行看门道，在这里不过多评论了。那么我这语言，
我从开始构思的过程和基础都发表出来，一步一步的从基础构建整个语言和编译器，这样的话，神仙也说不出我抄袭并非原创的论调。
关于我这个语言的曾经使用的名称：
pyin，2006年
rawapyin，2008年
rawapyin_base_auto，2010年
rawa_pyin_base_code_drivers，简写为：rpbcd (2013年3月6日)
rawapyin_base_code_loop，2014年
pyin loop table  by rawa  (2020年2月27日)
Lua Pascal 2020年6月
最后思考再三，还不如就叫 Lua driver for Pascal by rawa ，简称L&P语言 (2020年7月5日).
要想借鉴这么多语言，那么，必须有个优先级问题，实际上我到了现在这个水平，什么语法其实已经都可以实现了，无所谓，为了兼顾pascal，我们
尽量的继承freePascal的主题语法，要想兼容Lua，那就必须构建元表结构，要想兼容perl，那就必须构建List，包括兼容perl标量的语法，
因此，这个语言，比pascal语法更多，支持关系表，支持标量，支持list，支持字典，关于class的实现和使用，这部分，我准备采用语言本身来描
述calss和对象的引用和作为参数传递和返回值返回，并且支持动态控制，属于解释器，也就是说，基本上是以pascal语言为基础语法，参考和借鉴lisp
的表达式计算，借鉴Lua的关系表和元表设计，借鉴perl的标量和list，所以，从本质上讲是，两种L字母开头的语言和两种P字母开头的语言，所以定为
L&P语言。
其中使用非OOP语言来实现面向对象和class的机制，这是我这些年研究的精华，就是说使用语言自己扩展自己成为面向对象的语言，这也是C语言和
objectPascal经过长期发展已经兑现的事，当然C++语言属于完全的实现，一点自展技术也没有使用，这样工作量巨大，但是编译器效率高，而我这个
实验性的语言，将采用彻底的完全的自展技术实现整个语言和面向对象过程，这也是我这些年研究的骄傲。
------------------
我第一步，先设计了一种四元表结构，其实，怎么说呢，就类似Excel表格，只不过是四列，我真的用一个Excel表格写了原型：
A，512位，B，512位，C，64位，D，512位，E，整数计数器
A可以作为参数，B是备用参数，可有可无，当然有的时候必须两个参数，这里的A和B可以是任何东西，对象也可以，C表示的是行为，也就是我们要对参数
做什么？D表示的是返回值，实际上我们可以把结果重新写入A或者B，作为返回值，但是，扫描器是按照ABCDE的顺序来扫描四元表的，如果C执行的很顺利
，则在D写入一个0或者pass这样的符合，作为执行结束的标志，有点像汇编指令，也有点像超长指令字。然后，循环执行，直到有指令然扫描器结束并退出。
